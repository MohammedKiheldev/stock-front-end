{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductServiceService {\n  constructor(http) {\n    this.http = http;\n    this.productsUrl = 'http://localhost:8080/products';\n  }\n  findAll() {\n    return this.http.get(this.productsUrl);\n  }\n  save(product) {\n    return this.http.post(this.productsUrl, product);\n  }\n  getProduct(id) {\n    return this.http.get(`${this.productsUrl}/${id}`);\n  }\n  updateProduct(id, product) {\n    return this.http.put(`${this.productsUrl}/${id}`, product);\n  }\n  addProduct(product) {\n    return this.http.post(this.productsUrl, product);\n  }\n}\nProductServiceService.ɵfac = function ProductServiceService_Factory(t) {\n  return new (t || ProductServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductServiceService,\n  factory: ProductServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductServiceService };","map":{"version":3,"names":["ProductServiceService","constructor","http","productsUrl","findAll","get","save","product","post","getProduct","id","updateProduct","put","addProduct","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/mohammed/stock-front-end/src/app/product-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from './product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductServiceService {\n\n  private productsUrl: string;\n  constructor(private http: HttpClient) {\n    this.productsUrl = 'http://localhost:8080/products'; \n  }\n\n  public findAll(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.productsUrl);\n  }\n\n  public save(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.productsUrl, product);\n  }\n\n  public getProduct(id: number): Observable<Product> {\n    return this.http.get<Product>(`${this.productsUrl}/${id}`);\n  }\n\n  public updateProduct(id: number, product: Product): Observable<Product> {\n    return this.http.put<Product>(`${this.productsUrl}/${id}`, product);\n  }\n\n  public addProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.productsUrl, product);\n  }\n\n}\n"],"mappings":";;AAKA,MAGaA,qBAAqB;EAGhCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,WAAW,GAAG,gCAAgC;EACrD;EAEOC,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,WAAW,CAAC;EACnD;EAEOG,IAAIA,CAACC,OAAgB;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,IAAI,CAACL,WAAW,EAAEI,OAAO,CAAC;EAC3D;EAEOE,UAAUA,CAACC,EAAU;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,WAAW,IAAIO,EAAE,EAAE,CAAC;EAC5D;EAEOC,aAAaA,CAACD,EAAU,EAAEH,OAAgB;IAC/C,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,WAAW,IAAIO,EAAE,EAAE,EAAEH,OAAO,CAAC;EACrE;EAEOM,UAAUA,CAACN,OAAgB;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,IAAI,CAACL,WAAW,EAAEI,OAAO,CAAC;EAC3D;;AAzBWP,qBAAqB,C;mBAArBA,qBAAqB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAArBjB,qBAAqB,C;SAArBA,qBAAqB;EAAAkB,OAAA,EAArBlB,qBAAqB,CAAAmB,IAAA;EAAAC,UAAA,EAFpB;AAAM;SAEPpB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}