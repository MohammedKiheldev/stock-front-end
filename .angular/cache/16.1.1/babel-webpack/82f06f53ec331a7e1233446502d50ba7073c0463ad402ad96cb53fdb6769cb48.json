{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    return this.http.post('/api/login', {\n      username,\n      password\n    }).pipe(map(response => {\n      // Gérez la réponse du serveur ici, par exemple, en sauvegardant le token d'authentification\n      const token = response.token;\n      // Faites ce que vous devez faire avec le token\n    }));\n  }\n\n  logout() {\n    // Effectuez les opérations nécessaires pour vous déconnecter, par exemple, supprimez le token d'authentification\n    return this.http.post('/api/logout', {}).pipe(map(response => {\n      // Gérez la réponse du serveur ici, par exemple, en effectuant une action après la déconnexion\n    }));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["map","AuthService","constructor","http","login","username","password","post","pipe","response","token","logout","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/mohammed/stock-front-end/src/app/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post<any>('/api/login', { username, password }).pipe(\n      map(response => {\n        // Gérez la réponse du serveur ici, par exemple, en sauvegardant le token d'authentification\n        const token = response.token;\n        // Faites ce que vous devez faire avec le token\n      })\n    );\n  }\n\n  logout(): Observable<any> {\n    // Effectuez les opérations nécessaires pour vous déconnecter, par exemple, supprimez le token d'authentification\n    return this.http.post<any>('/api/logout', {}).pipe(\n      map(response => {\n        // Gérez la réponse du serveur ici, par exemple, en effectuant une action après la déconnexion\n      })\n    );\n  }\n}\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAEpC,MAGaC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,YAAY,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAACE,IAAI,CACnER,GAAG,CAACS,QAAQ,IAAG;MACb;MACA,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5B;IACF,CAAC,CAAC,CACH;EACH;;EAEAC,MAAMA,CAAA;IACJ;IACA,OAAO,IAAI,CAACR,IAAI,CAACI,IAAI,CAAM,aAAa,EAAE,EAAE,CAAC,CAACC,IAAI,CAChDR,GAAG,CAACS,QAAQ,IAAG;MACb;IAAA,CACD,CAAC,CACH;EACH;;AArBWR,WAAW,C;mBAAXA,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXd,WAAW,C;SAAXA,WAAW;EAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPjB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}