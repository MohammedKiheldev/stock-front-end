{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./authentication.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.successMessage);\n  }\n}\nclass LoginComponent {\n  constructor(route, router, authenticationService) {\n    this.route = route;\n    this.router = router;\n    this.authenticationService = authenticationService;\n    this.errorMessage = 'Invalid Credentials';\n    this.invalidLogin = false;\n    this.loginSuccess = false;\n  }\n  ngOnInit() {}\n  handleLogin() {\n    this.authenticationService.authenticationService(this.username, this.password).subscribe(result => {\n      this.invalidLogin = false;\n      this.loginSuccess = true;\n      this.successMessage = 'Login Successful.';\n      this.router.navigate(['/hello-world']);\n    }, () => {\n      this.invalidLogin = true;\n      this.loginSuccess = false;\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthenticationService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 4,\n  consts: [[1, \"container\", \"col-lg-6\"], [1, \"text-center\"], [1, \"card\"], [1, \"card-body\"], [1, \"form-group\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"Enter User Name\", \"name\", \"username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"alert\", \"alert-warning\"], [1, \"alert\", \"alert-success\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-menu\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"h1\", 1);\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"form\", 4);\n      i0.ɵɵtemplate(7, LoginComponent_div_7_Template, 2, 1, \"div\", 5);\n      i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"User Name :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n        return ctx.handleLogin();\n      });\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.invalidLogin);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginSuccess);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","ctx_r1","successMessage","LoginComponent","constructor","route","router","authenticationService","invalidLogin","loginSuccess","ngOnInit","handleLogin","username","password","subscribe","result","navigate","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","AuthenticationService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LoginComponent_div_7_Template","LoginComponent_div_8_Template","ɵɵlistener","LoginComponent_Template_input_ngModelChange_12_listener","$event","LoginComponent_Template_input_ngModelChange_16_listener","LoginComponent_Template_button_click_17_listener","ɵɵproperty"],"sources":["/home/mohammed/stock-front-end/src/app/login/login.component.ts","/home/mohammed/stock-front-end/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username!: string;\n  password !: string;\n  errorMessage = 'Invalid Credentials';\n  successMessage!: string;\n  invalidLogin = false;\n  loginSuccess = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService) {   }\n\n  ngOnInit() {\n  }\n\n  handleLogin() {\n    this.authenticationService.authenticationService(this.username, this.password).subscribe((result)=> {\n      this.invalidLogin = false;\n      this.loginSuccess = true;\n      this.successMessage = 'Login Successful.';\n      this.router.navigate(['/hello-world']);\n    }, () => {\n      this.invalidLogin = true;\n      this.loginSuccess = false;\n    });      \n  }\n}","<app-menu></app-menu>\n<div class=\"container col-lg-6\">\n    <h1 class=\"text-center\">Login</h1>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <form class=\"form-group\">\n          <div class=\"alert alert-warning\" *ngIf='invalidLogin'>{{errorMessage}}</div>\n          <div class=\"alert alert-success\" *ngIf='loginSuccess'>{{successMessage}}</div>\n          <div class=\"form-group\">\n            <label for=\"email\">User Name :</label>\n            <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"username\" placeholder=\"Enter User Name\"\n              name=\"username\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"pwd\">Password:</label>\n            <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" id=\"password\" placeholder=\"Enter password\"\n              name=\"password\">\n          </div>\n          <button (click)=handleLogin() class=\"btn btn-success\">Login</button>\n        </form>\n      </div>\n    </div>\n  </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}